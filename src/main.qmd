---
title: "AT Study"
execute:
  echo: true
  warning: false
---

## Introduction

TBA

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Import and clean-up data

```{r}
suppressPackageStartupMessages(library(caret))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(vioplot))
```

```{r}
dfRaw <- read.csv(file = '../data/results.csv', header = TRUE, sep = ';')
head(dfRaw)

tcColumns <- c('TC1_seconds_user_done', 'TC2_seconds_user_done', 'TC3_seconds_user_done', 'TC4_seconds_user_done', 'TC5_seconds_user_done', 'TC6_seconds_user_done', 'TC7_seconds_user_done', 'TC8_seconds_user_done')
tcNames <- c('TC1', 'TC2', 'TC3', 'TC4', 'TC5', 'TC6', 'TC7', 'TC8')

df <- dfRaw %>% mutate(
  TC_sum = TC1_seconds + TC2_seconds + TC3_seconds + TC4_seconds + TC5_seconds + TC6_seconds + TC7_seconds + TC8_seconds,
  TC_sum_user_done = TC1_seconds_user_done + TC2_seconds_user_done + TC3_seconds_user_done + TC4_seconds_user_done + TC5_seconds_user_done + TC6_seconds_user_done + TC7_seconds_user_done + TC8_seconds_user_done,
  Online_session = as.logical(Online_session))


dfM <- data.frame(
  TC1_seconds = mean(dfRaw$TC1_seconds[dfRaw$TC1_treatment == 'M']),
  TC2_seconds = mean(dfRaw$TC2_seconds[dfRaw$TC2_treatment == 'M']),
  TC3_seconds = mean(dfRaw$TC3_seconds[dfRaw$TC3_treatment == 'M']),
  TC4_seconds = mean(dfRaw$TC4_seconds[dfRaw$TC4_treatment == 'M']),
  TC5_seconds = mean(dfRaw$TC5_seconds[dfRaw$TC5_treatment == 'M']),
  TC6_seconds = mean(dfRaw$TC6_seconds[dfRaw$TC6_treatment == 'M']),
  TC7_seconds = mean(dfRaw$TC7_seconds[dfRaw$TC7_treatment == 'M']),
  TC8_seconds = mean(dfRaw$TC8_seconds[dfRaw$TC8_treatment == 'M'])
)

dfA <- data.frame(
  TC1_seconds = mean(dfRaw$TC1_seconds[dfRaw$TC1_treatment == 'A']),
  TC2_seconds = mean(dfRaw$TC2_seconds[dfRaw$TC2_treatment == 'A']),
  TC3_seconds = mean(dfRaw$TC3_seconds[dfRaw$TC3_treatment == 'A']),
  TC4_seconds = mean(dfRaw$TC4_seconds[dfRaw$TC4_treatment == 'A']),
  TC5_seconds = mean(dfRaw$TC5_seconds[dfRaw$TC5_treatment == 'A']),
  TC6_seconds = mean(dfRaw$TC6_seconds[dfRaw$TC6_treatment == 'A']),
  TC7_seconds = mean(dfRaw$TC7_seconds[dfRaw$TC7_treatment == 'A']),
  TC8_seconds = mean(dfRaw$TC8_seconds[dfRaw$TC8_treatment == 'A'])
)

dfMean <- data.frame(
  TC1_seconds = mean(dfRaw$TC1_seconds),
  TC2_seconds = mean(dfRaw$TC2_seconds),
  TC3_seconds = mean(dfRaw$TC3_seconds),
  TC4_seconds = mean(dfRaw$TC4_seconds),
  TC5_seconds = mean(dfRaw$TC5_seconds),
  TC6_seconds = mean(dfRaw$TC6_seconds),
  TC7_seconds = mean(dfRaw$TC7_seconds),
  TC8_seconds = mean(dfRaw$TC8_seconds)
)
```
## Seperate two treatments
```{r}
tc1M <- df %>% filter(TC1_treatment == 'M') %>% select(tcColumns[1]) %>% pull(tcColumns[1])
tc1A <- df %>% filter(TC1_treatment == 'A') %>% select(tcColumns[1]) %>% pull(tcColumns[1])

tc2M <- df %>% filter(TC2_treatment == 'M') %>% select(tcColumns[2]) %>% pull(tcColumns[2])
tc2A <- df %>% filter(TC2_treatment == 'A') %>% select(tcColumns[2]) %>% pull(tcColumns[2])

tc3M <- df %>% filter(TC3_treatment == 'M') %>% select(tcColumns[3]) %>% pull(tcColumns[3])
tc3A <- df %>% filter(TC3_treatment == 'A') %>% select(tcColumns[3]) %>% pull(tcColumns[3])

tc4M <- df %>% filter(TC4_treatment == 'M') %>% select(tcColumns[4]) %>% pull(tcColumns[4])
tc4A <- df %>% filter(TC4_treatment == 'A') %>% select(tcColumns[4]) %>% pull(tcColumns[4])

tc5M <- df %>% filter(TC5_treatment == 'M') %>% select(tcColumns[5]) %>% pull(tcColumns[5])
tc5A <- df %>% filter(TC5_treatment == 'A') %>% select(tcColumns[5]) %>% pull(tcColumns[5])

tc6M <- df %>% filter(TC6_treatment == 'M') %>% select(tcColumns[6]) %>% pull(tcColumns[6])
tc6A <- df %>% filter(TC6_treatment == 'A') %>% select(tcColumns[6]) %>% pull(tcColumns[6])

tc7M <- df %>% filter(TC7_treatment == 'M') %>% select(tcColumns[7]) %>% pull(tcColumns[7])
tc7A <- df %>% filter(TC7_treatment == 'A') %>% select(tcColumns[7]) %>% pull(tcColumns[7])

tc8M <- df %>% filter(TC8_treatment == 'M') %>% select(tcColumns[8]) %>% pull(tcColumns[8])
tc8A <- df %>% filter(TC8_treatment == 'A') %>% select(tcColumns[8]) %>% pull(tcColumns[8])
```

## Plot total test execution time per subject

```{r}
time_sum_bar <- barplot(height=df$TC_sum, names=1:5, 
        col="#69b3a2",
        horiz=T, las=1,
        xlim=c(0, 1000),
        xlab="Sum of test case duration per participant in seconds",
        ylab="Paticipant ID"
        )
text(time_sum_bar, x=df$TC_sum-80 , paste(df$TC_sum, "sec", sep=" ") ,cex=1) 
```

## Violin plot per test case
```{r}
data <- df %>% select(all_of(tcColumns))

vioplot(data,
        col="#69b3a2",
        names=tcNames,
        ylab="Duration in seconds",
        xlab="Distribution of duration per test case"
        )
```
## Violin plot per test case with seperation of the treatments
```{r}
length(tc1A) <- 3
length(tc1M) <- 3
length(tc2M) <- 3
length(tc2A) <- 3
data <- data.frame(
  TC1M = tc1M,
  TC1A = tc1A,
  TC2M = tc2M,
  TC2A = tc2A
)
vioplot(data,
        col="#69b3a2",
        ylab="Duration in seconds",
        xlab="Distribution of duration per test case"
        )
```



```{r}

preProc <- preProcess(df, method=c('range'), rangeBounds=c(-1,1))
dfNorm <- predict(preProc, df)

dfMNorm <- predict(preProc, dfM)
dfANorm <- predict(preProc, dfA)
dfMeanNorm <- predict(preProc, dfMean)
```

Not normalized

```{r}
x = 1:8
xLabels = c('TC1', 'TC2', 'TC3', 'TC4', 'TC5', 'TC6', 'TC7', 'TC8')

plot(x, dfMean, type ='o', col = 1, xaxt = "n", ylim = c(0, 250), xlab="Test case", ylab="duration in seconds")
lines(x, dfM, type ='o', col = 'red')
lines(x, dfA, type ='o', col = 'green')
axis(1, at = 1:8, labels = xLabels)
legend(1, 240, legend=c("Mean", "Mean M", "Mean A"),
       col=c("black", "red", "green"), lty=1, cex=0.8)
```


Normalized
```{r}
plot(x, dfMeanNorm, type ='o', col = 1, xaxt = "n", ylim = c(-1, 1), xlab="Test case", ylab="duration normalized")
lines(x, dfMNorm, type ='o', col = 2)
lines(x, dfANorm, type ='o', col = 3)
axis(1, at = 1:8, labels = xLabels)
legend(1, 1, legend=c("Mean", "Mean M", "Mean A"),
       col=c("black", "red", "green"), lty=1, cex=0.8)
```
